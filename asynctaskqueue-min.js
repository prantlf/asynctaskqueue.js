//     asynctaskqueue.js 1.0.0
//     https://github.com/prantlf/asynctaskqueue.js
//     (c) 2014 Ferdinand Prantl <prantlf@gmail.com>
//     Freely distributable under the MIT license
!function(e,n,r,t){var i,s;if("undefined"!=typeof define)define("asynctaskqueue",["underscrore","jquery"],function(e,n){return t(e,n)});else if("undefined"!=typeof module&&"undefined"!=typeof module.exports)n=require("underscore"),r=require("jquery"),module.exports=t(n,r);else{if("undefined"==typeof e)throw new Error("JavaScript environment not recognized.");if("undefined"==typeof n)throw new Error("Underscore.js not detected.");if("undefined"==typeof r)throw new Error("JQuery not detected.");i=e.AsyncTaskQueue,e.AsyncTaskQueue=s=t(n,r),s.noConflict=function(){return e.AsyncTaskQueue=i,s}}}(window,_,jQuery,function(e,n){function r(e,r){this.worker=e,this.deferred=n.Deferred()}function t(e){}
// * Task         - object to wrap the workers with (`Task` by default)
// * Scheduler    - object to push pending workers to the queue and pop
// * scheduler    - the optional parameter to be passed to the
function i(e){e||(e={}),this.parallelism=e.parallelism||1/0,this.asynchronous=e.asynchronous,e.Task&&(this.Task=e.Task),e.Scheduler&&(this.Scheduler=e.Scheduler),this.pending=[],this.processing=[],this.deferred=n.Deferred(),this.scheduler=new t(this,e.scheduler)}return e.extend(r.prototype,{promise:function(){return this.deferred.promise()}}),e.extend(t.prototype,{push:function(e,n){e.push(n)},pop:function(e){return e.shift()}}),e.extend(i.prototype,{Task:r,Scheduler:t,enqueue:function(e,n){return e instanceof this.Task||(e=new this.Task(e,n)),this.scheduler.push(this.pending,e),this._schedule(),e},dequeue:function(e){var n=this._index(this.pending,e);return n>=0?this.pending.splice(n,1)[0]:void 0},promise:function(){return this.deferred.promise()},empty:function(){return!(this.pending.length||this.processing.length)},pause:function(){return this.paused=!0,this},resume:function(){return this.paused=!1,this._schedule(),this},abort:function(){return this.pending=[],this.processing.length?this.promise():n.Deferred.resolve().promise()},_schedule:function(){var e;!this.paused&&this.processing.length<this.parallelism&&(e=this.scheduler.pop(this.pending))&&(this.processing.push(e),this.deferred.notify({scheduled:!0}),this._execute(e),this._schedule())},_execute:function(e){function n(){try{e.worker().progress(e.deferred.notify).done(e.deferred.done).fail(e.deferred.fail).always(function(){r._finish(e)})}catch(n){e.deferred.reject(n),r._finish(e)}}var r=this;this.asynchronous?"undefined"!=typeof setImmediate?setImmediate(n):setTimeout(n,0):n()},_finish:function(e){var r=this._index(this.processing,e);this.processing.splice(r,1),this.empty()?(this.deferred.resolve(),this.deferred=n.Deferred()):this._schedule()},_index:function(e,n){var r;for(n instanceof this.Task&&(n=n.worker),r=0;r<e.length;++r)if(e[r].worker===n)return r;return-1}}),i.version="1.0.0",i});
//# sourceMappingURL=asynctaskqueue-min.map